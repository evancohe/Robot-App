{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robot","id","alt","name","email","CardList","robots","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredRobots","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,aAAqDC,IAAI,KACjE,6BAAKL,EAAMG,MAAMG,OACjB,4BAAIN,EAAMG,MAAMI,YCHXC,G,MAAW,SAACR,GACzB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,OAAOC,KAAI,SAAAP,GAAK,OAAK,cAAC,EAAD,CAAuBA,MAASA,GAAnBA,EAAMC,WCHtCO,G,YAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAY,SACRa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BHG,E,kDA7Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,OAAQ,GACRS,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,OAAQc,S,oBAG3C,WAAU,IAAD,SACyBE,KAAKR,MAA7BR,EADD,EACCA,OAAQS,EADT,EACSA,YACVQ,EAAiBjB,EAAOkB,QAAO,SAAAxB,GAAK,OAAIA,EAAMG,KAAKsB,cAAcC,SAASX,EAAYU,kBAC5F,OAAQ,sBAAK3B,UAAU,MAAf,UACN,oBAAIA,UAAU,QAAd,2BACA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAC3D,cAAC,EAAD,CAAUvB,OAAQiB,W,GAvBNO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21ab93e1.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css'\n\nexport const Card = (props) => (\n    <div className = \"card-container\">\n        <img src={`https://robohash.org/${props.robot.id}?set=set1`} alt=\"\"/>\n        <h2>{props.robot.name}</h2>\n        <p>{props.robot.email}</p>\n    </div>\n)\n","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.style.css'\n\nexport const CardList = (props) => {\nreturn <div className='card-list'>\n    {props.robots.map(robot => (<Card key = {robot.id} robot = {robot} />))}\n    </div>\n}","import React from 'react';\nimport './search-box.styles.css'\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input\n    className = \"search\"\n        type=\"search\"\n        placeholder={placeholder}\n        onChange={handleChange} />\n)","import React from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport './App.css';\nimport { SearchBox } from './search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n  }\n\n  render() {\n    const { robots, searchField } = this.state;\n    const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (<div className=\"App\" >\n      <h1 className=\"title\">Robots Search</h1>\n      <SearchBox\n        placeholder=\"Search Robots\"\n        handleChange={e => this.setState({ searchField: e.target.value })} />\n      <CardList robots={filteredRobots} />\n\n    </div >\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}